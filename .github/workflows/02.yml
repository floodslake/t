name: 02-DL-SFF
on: 
  workflow_dispatch:
    inputs:
      filename:
        required: true
        description: Filename
      m3u8url:
        required: true
        description: m3u8 URL
      referer:
        required: false
        description: Referer
      audioonly:
        type: boolean
        description: Audio-only
        default: true
      videoonly:
        type: boolean
        description: Video-only
        default: false
      discord:
        type: boolean
        description: sent to Discord 
        default: true
      ftp_only:
        type: boolean
        description: FTP-ONLY
        default: false
      useffmpeg:
        type: boolean
        description: use FFMPEG
        default: false
jobs:
  SFFDL:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Installing
      run : |
        sudo apt update -y
        sudo pip install -v "streamlink<6.0.0"
        sudo wget -q 'https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz'
        sudo tar xvf ffmpeg-release-amd64-static.tar.xz ffmpeg-6.0-amd64-static/ffmpeg ffmpeg-6.0-amd64-static/ffprobe
        sudo chmod a+rx ffmpeg-6.0-amd64-static/ffmpeg ffmpeg-6.0-amd64-static/ffprobe
        sudo mv ffmpeg-6.0-amd64-static/ffmpeg ffmpeg-6.0-amd64-static/ffprobe /usr/local/bin/
        sudo rm -rf ffmpeg-6.0-amd64-static ffmpeg-release-amd64-static.tar.xz
        sudo chmod a+rx go-ul
        sudo cp go-ul /usr/local/bin/go-ul
        sudo rm output/.gitkeep DL/.gitkeep UL/.gitkeep
        echo $(date +'[%Y-%m-%d]') ${{github.event.inputs.filename}} > 'output/link.txt'
    - name: Downloading
      env:
        FILE_NAME: ${{github.event.inputs.filename}}
        M3U8_URL: ${{github.event.inputs.m3u8url}}
        AUDIO_ONLY: ${{github.event.inputs.audioonly}}
        VIDEO_ONLY: ${{github.event.inputs.videoonly}}
        USE_FFMEG: ${{github.event.inputs.useffmpeg}}
        REFERER: ${{github.event.inputs.referer}}
        TC: false
      run: python SFFDL.py
    - name: Uploading
      if: ${{github.event.inputs.ftp_only == 'false'}}
      env:
        VOE_FTP: ${{ secrets.VOE_FTP }}
        SL_FTP: ${{ secrets.SL_FTP }}
        FTP_1F: ${{ secrets.FTP_1F }}
      run: |
        go-ul pixeldrain catbox ftp gofile anonfiles -d 'UL/' -r -u '${{ env.VOE_FTP }}/SFF/${{github.event.inputs.filename}}' -o 'output/link.txt'
        mv 'output/link.txt' "output/$(echo $(date +'[%Y-%m-%d]'))_${{github.event.inputs.filename}}.txt"
        go-ul ftp -d 'UL/' -r -u '${{ env.SL_FTP }}/SFF' -O
        go-ul ftp -d 'UL/' -r -u '${{ env.FTP_1F }}' -O
      # go-ul ftp -d 'DL/' -r -u '${{ env.SL_FTP }}/SFFraw' -O
    - name: Uploading to FTP
      if: ${{github.event.inputs.ftp_only == 'true'}}
      env:
        VOE_FTP: ${{ secrets.VOE_FTP }}
        SL_FTP: ${{ secrets.SL_FTP }}
        FTP_1F: ${{ secrets.FTP_1F }}
      run: |
        go-ul ftp -d 'UL/' -r -u '${{ env.SL_FTP }}/SFF' -O
        go-ul ftp -d 'UL/' -r -u '${{ env.VOE_FTP }}/SFF/${{github.event.inputs.filename}}' -O
        go-ul ftp -d 'UL/' -r -u '${{ env.FTP_1F }}' -O
      # go-ul ftp -d 'DL/' -r -u '${{ env.SL_FTP }}/SFFraw' -O
    - name: Send file to discord
      if: ${{github.event.inputs.discord == 'true'}}
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_SFF }}
      with:
        args: output/*.txt
    - name: Upload link
      uses: actions/upload-artifact@v3
      with:
        name: ${{github.event.inputs.filename}}
        path: output/*.txt
