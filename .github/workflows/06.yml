name: 06-DL-Y
on: 
  workflow_dispatch:
    inputs:
      url:
        required: true
        description: Youtube URL
      name:
        required: true
        description: Channel name
      audioOnly:
        type: boolean
        description: DL Audio-only
        default: true
jobs:
  ytarchive:
    runs-on: ubuntu-latest
    environment: 
      name: ${{github.event.inputs.name}}
      url: ${{github.event.inputs.url}}
    steps:
    - uses: actions/checkout@v4
    - name: Installing
      run : |
        sudo wget -q 'https://github.com/youcmd/ffmpegbuildlinux/releases/latest/download/ffmpeg-linux.7z'
        sudo 7z x ffmpeg-linux.7z -o/usr/local/bin/ && rm ffmpeg-linux.7z
        sudo chmod +x /usr/local/bin/ffmpeg /usr/local/bin/ffprobe /usr/local/bin/ffplay
        sudo chmod +x ytarchive
        sudo cp ytarchive /usr/local/bin/ytarchive
        sudo chmod +x go-ul
        sudo cp go-ul /usr/local/bin/go-ul
        sudo apt install tor
        sudo service tor start
        ss -nlt
        sudo rm output/.gitkeep DL/.gitkeep UL/.gitkeep
        echo $(date +'[%Y-%m-%d]') ${{github.event.inputs.name}} ${{github.event.inputs.url}} > output/link.txt
    - name: Downloading ${{github.event.inputs.name}} ${{github.event.inputs.url}}
      if: ${{github.event.inputs.audioOnly == 'false'}}
      run: |
        torsocks -i ytarchive -4 -v -w -t -o "DL/[%(upload_date)s] %(id)s (%(channel)s)" --add-metadata --separate-audio --threads 3 "${{github.event.inputs.url}}" best
        
    - name: Downloading Audio-only
      if: ${{github.event.inputs.audioOnly == 'true'}}
      run: |
         torsocks -i ytarchive -4 -v -w -t -o "DL/[%(upload_date)s] %(id)s (%(channel)s)" --add-metadata --threads 3 "${{github.event.inputs.url}}" audio_only
         
    - name: Uploading ftp
      if: ${{github.event.inputs.audioOnly == 'false'}}
      env:
        VOE_FTP: ${{ secrets.VOE_FTP }}
      run: |
        go-ul ftp -d 'DL/' -r -u '${{ env.VOE_FTP }}/YouTube/${{github.event.inputs.name}}' -O -o output/link.txt
    - name: Uploading
      env:
        VOE_FTP: ${{ secrets.VOE_FTP }}
        FTP_1F: ${{ secrets.FTP_1F }}
        UC_FTP: ${{ secrets.UC_FTP }}
        GO_TOKEN: ${{ secrets.GO_TOKEN }}
        GO_FOLDER: ${{ secrets.GO_FOLDER }}
        FOLDER: "DL"
      run: |
        go-ul catbox ftp -d 'DL/' -r -u '${{ env.FTP_1F }}' -O -o output/link.txt
        pip install requests
        python 5file-ul.py
        mv output/link.txt "output/$(date +'[%Y-%m-%d]')_${{github.event.inputs.name}}_$(echo '${{github.event.inputs.url}}' | tail -c 12).txt"
      # go-ul ftp -d 'DL/' -r -u '${{ env.UC_FTP }}/YouTube/${{github.event.inputs.name}}' -O
    - name: Upload link ${{github.event.inputs.name}}s Videos
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.event.inputs.name}}
        path: output/*.txt
    - name: Send file to discord
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_YT }}
      with:
        args: output/*.txt
    - name: PD DL uploader
      env:
        PD_TOKEN: ${{ secrets.PD_TOKEN }}
        FOLDER: "DL"
      run: python pd_uploader.py
